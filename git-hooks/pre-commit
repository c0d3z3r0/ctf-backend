#!/bin/bash -e

if [[ -z "$GIT_DIR" ]]; then
  GIT_DIR="$(cd "$(dirname "$0")/../.git" && pwd -P)"  # works on mac, too
fi

cd "$GIT_DIR/.."


if [ "$(git symbolic-ref HEAD)" == "refs/heads/master" ]; then
  # Switch to virtual env
  ! [ -e venv ] && echo "Virtual env missing. Abort." && exit 1
  . venv/bin/activate

  # Deploy check
  if [ "$NODEP" != "1" ]; then
    debug=$(grep -oP "^DEBUG = (True|False)$" ctfbackend/settings.py)
    sed -i'' 's/^DEBUG =.*$/DEBUG = False/' ctfbackend/settings.py

    if ./manage.py check --deploy 2>&1 | grep -qE '[1-9]+ issues'; then
      echo WARNING!
      echo There were deploy check errors.
      echo Check with ./manage.py check --deploy.
      echo You may want to correct them or ignore them setting NODEP=1.
      sed -i'' 's/^DEBUG =.*$/'"$debug"'/' ctfbackend/settings.py
      exit 1
    fi

    sed -i'' 's/^DEBUG =.*$/'"$debug"'/' ctfbackend/settings.py
  fi

  # Make migrations and check if all are added to stage
  if [ "$NOMIG" != "1" ]; then
    ./manage.py makemigrations
  	mig=$(find -E . -regex ./ctfbackend/.*migrations/[0-9]+.*\.py)
  	if ! git ls-files --stage --error-unmatch $mig >/dev/null 2>/dev/null;
  	then
      echo WARNING!
      echo "Don't forget to add the migration files!"
      echo "Set NOMIG=1 to ignore."
      exit 1
    fi
  fi

  # deactivate virtual env
  deactivate

  echo All checks succeeded.
fi
